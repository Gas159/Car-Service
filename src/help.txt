poetry add fastapi 'uvicorn[standard]' 'pydantic[email]' pydantic-settings
Version: 1.5.1
poetry add 'sqlalchemy[asyncio]' #async orm
poetry add asyncpg #postgres

poetry add "uvicorn[standard]" gunicorn
gunicorn main:app --workers 3 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8001 --reload
uvicorn main:main_app --host 0.0.0.0 --port 8001 --ssl-keyfile /etc/letsencrypt/live/gas159.ru/privkey.pem --ssl-certfile /etc/letsencrypt/live/gas159.ru/fullchain.pem --reload  --workers=3

poetry add fastapi-pagination

pip install 'fastapi-users[sqlalchemy]'

poetry add alembic
alembic init -t async alembic
alembic revision --autogenerate -m 'create user table2'
alembic upgrade head
alembic downgrade -1 or alembic downgrade base

poetry add celery flower
celery -A y_project_services.task_celery.tasks:celery [worker, flower, bit (переодические задания)] -l info
flower  = http://localhost:5555/
celery -A y_project_services.task_celery.tasks:celery flower -l info


poetry add --group dev black
black --diff --color ./

poetry add --group dev pytest
pytest

poetry add aio-pika
poetry add aioredis
# sudo apt update
# sudo apt install redis-server
 sudo nano /etc/redis/redis.conf
 supervised = systemd
#  $redis-cli ; ping

d build . --tag fastapi
d run -p 8000:8000 fastapi


limit=5&offset=0
page=1&size=1011CU

pip3 freeze > requirements.txt



feat([api | core | parser]) + desc  = добавление новой функциональности, фича.
fix = исправление ошибок в коде
docs = изменение документации
refactor = рефакторинг кода без изменения функциональности


убрать v1/api1
сделать таблицу с языками
перевод динамический
настроить авторизацию отображение, кастомизировать...


есть проблемы  легендой.
короче о проектах
план. о себе.
CRM
стек ограничен. проектов не видно.
хочу ваш стек в компании. посмотри что в компании.
пишем программы, разрабатываем, проектируем.

зп?
о проекте, рассказать сане, чтобы отредактировал


работаем по скрам
адд описание компании
очередность в стеке  тулс гит, линукс
бекенд без фулстак

настройка сиай сиди с нуля. обязаности. добавил линтеры, тесты
переверл учетан  бд, добавил админку
разработал, несколько микросервисов по десятку ендпойнтов в обязаности

накидать список вопросов на мок собес. гит, докер, солид, принципы програмирования

Стек:
Python, FastAPI, Django, Docker/compose, PostgreSQL, Redis, RabbitMQ, Celery, asyncio, alembic, pytest
Инструменты:
Linux, Git, CI/CD, Nginx
Протоколы и технологии:
TCP/UDP, HTTP/HTTPS, AMQP, WebSocket, gRPC
Принципы:
SOLID, DRY, KISS, Асинхронное программирование, REST API


websocket:  события open/close/message/error

3-5 рукопожатий, почитать. aioredis, celery, rabbitmq